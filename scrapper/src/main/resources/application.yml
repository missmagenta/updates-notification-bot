app:
  scheduler:
    enable: true
    interval: 10s
    force-check-delay: 10s

  kafka-topic:
    topic-name: "topic1"
    partitions-count: 10
    replica-count: 1
  kafka-bootstrap-address: "localhost:19092"
  kafka-group-id: "notify-group"
  kafka-auto-offset-reset: "earliest"
  use-queue: true

  database-access-type: jpa
  bot-api-url: "http://localhost:8090"

retry:
  max-attempts: 3
  strategy: linear
  interval: 3s
  codes: 500

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/scrapper
    driver-class-name: org.postgresql.Driver
    username: ${POSTGRES_USERNAME}
    password: ${POSTGRES_PASSWORD}
  application:
    name: scrapper
  codec:
    max-in-memory-size: 500KB
  cache:
    caffeine:
      spec: maximumSize=1000000,expireAfterAccess=600s
    cache-names:
      - buckets


springdoc:
  swagger-ui:
    path: "/swagger-ui"

server:
  port: 8080

logging:
  config: classpath:log4j2-plain.xml


bucket4j:
  enabled: true
  filters:
    - cache-name: buckets
      url: /links(/|\?)?.*
      rate-limits:
        - expression: "@securityService.getClientIP(#this)"
          bandwidths:
            - capacity: 1
              time: 5
              unit: seconds
    - cache-name: buckets
      url: /tg-chat(/|\?)?.*
      rate-limits:
        - expression: "@securityService.getClientIP(#this)"
          bandwidths:
            - capacity: 1
              time: 5
              unit: seconds
